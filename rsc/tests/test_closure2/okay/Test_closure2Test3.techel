{
  # deploying contract `Test_closure2`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test_closure2`
      PUSH int 861543324652725 ;
      # money transferred
      PUSH mutez 811211477424330 ;
      # delegatable
      PUSH bool False ;
      # spendable
      PUSH bool False ;
      # delegate
      NONE key_hash ;
      # manager
      {
        PUSH key "" ;
        HASH_KEY
      }
    } ;
    CREATE_CONTRACT "Test_closure2"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_closure2`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 777558254060656 ;
    {
      PUSH int 48302457 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_closure2`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 28602430164700 ;
    PUSH int 0 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_closure2`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 22488177859174 ;
    PUSH int 8585732470 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_closure2`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 88238137825458 ;
    {
      PUSH int 8 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_closure2`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 535946186186945 ;
    PUSH int 0 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_closure2`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 780000109830142 ;
    {
      PUSH int 20508153281756274064 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
