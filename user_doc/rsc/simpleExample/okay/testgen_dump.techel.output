$ techelson --contract rsc/simpleExample/contracts/simpleExample.tz testgen -n 1 . ; echo ; echo "testcase:" ; echo ; cat SimpleExampleTest1.techel ; rm SimpleExampleTest1.techel
done generating test for contract SimpleExample
dumping testcases to `.`

testcase:

{
  # deploying contract `SimpleExample`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `SimpleExample`
      PUSH nat 807338681362247 ;
      # money transferred
      PUSH mutez 638557938255190 ;
      # delegatable
      PUSH bool False ;
      # spendable
      PUSH bool False ;
      # delegate
      NONE key_hash ;
      # manager
      {
        PUSH key "11a6ffbc9fb85" ;
        BLAKE2B
      }
    } ;
    CREATE_CONTRACT "SimpleExample"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT bool ;
      IF_NONE {
                PUSH string "unable to spawn contract `SimpleExample`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 120584798270008 ;
    PUSH bool True ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
