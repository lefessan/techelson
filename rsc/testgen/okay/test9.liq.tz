parameter bool;
storage (pair bool (pair (option int) (pair (map string int) (pair (set int) (list int)))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUUP @storage ;
       CDR ;
       DUUP @parameter ;
       IF { PUSH bool True } { PUSH bool False } ;
       RENAME @bool ;
       PAIR @storage ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       CDR ;
       DUUUP @parameter ;
       IF { NONE int } { PUSH (option int) (Some 3) } ;
       RENAME @option ;
       PAIR ;
       SWAP ;
       PAIR @storage ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       CDR ;
       DUUUUP @parameter ;
       IF { PUSH (map string int) {} }
          { DUUUUP @parameter ;
            IF { PUSH (map string int) { Elt "string" 1 } }
               { PUSH (map string int) { Elt "string" 1 ; Elt "toto" 2 } } } ;
       RENAME @map ;
       PAIR ;
       SWAP ;
       PAIR ;
       SWAP ;
       PAIR @storage ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       CDR ;
       DUUUUUP @parameter ;
       IF { PUSH (set int) {} } { PUSH (set int) { 1 ; 2 ; 3 ; 4 } } ;
       RENAME @set ;
       PAIR ;
       SWAP ;
       PAIR ;
       SWAP ;
       PAIR ;
       SWAP ;
       PAIR @storage ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       DUP ;
       CAR ;
       SWAP ;
       CDR ;
       DUP ;
       CAR ;
       SWAP ;
       DROP ;
       DUUUUUP @parameter ;
       DUUUUUUP @parameter ;
       OR ;
       IF { NIL int } { PUSH (list int) { 1 ; 2 ; 3 ; 4 ; 5 } } ;
       DIIIIIP { DROP ; DROP } ;
       RENAME @list ;
       SWAP ;
       PAIR ;
       SWAP ;
       PAIR ;
       SWAP ;
       PAIR ;
       SWAP ;
       PAIR @storage ;
       NIL operation ;
       PAIR };
