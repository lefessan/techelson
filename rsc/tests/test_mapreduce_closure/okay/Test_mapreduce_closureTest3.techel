{
  # deploying contract `Test_mapreduce_closure`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test_mapreduce_closure`
      PUSH bool False ;
      # money transferred
      PUSH mutez 731946906374580 ;
      # delegatable
      PUSH bool True ;
      # spendable
      PUSH bool True ;
      # delegate
      {
        PUSH key "" ;
        BLAKE2B ;
        SOME
      } ;
      # manager
      {
        PUSH key "" ;
        SHA256
      }
    } ;
    CREATE_CONTRACT "Test_mapreduce_closure"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string
                     "unable to spawn contract `Test_mapreduce_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 899714826180435 ;
    {
      EMPTY_MAP string mutez ;
      NONE mutez ;
      PUSH string "H2" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "Pw{jP[0(_9[" ;
      UPDATE ;
      PUSH mutez 777558254060656 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 206086407581280 ;
      SOME ;
      PUSH string "Z" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 812523915759621 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 543121121735633 ;
      SOME ;
      PUSH string "xWT~[_pT2" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "oSoVX,)N<X`p.(pTp '" ;
      UPDATE ;
      PUSH mutez 755660189882363 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 507575147934146 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 357931738305099 ;
      SOME ;
      PUSH string "" ;
      UPDATE
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string
                     "unable to spawn contract `Test_mapreduce_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 506663664060067 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string
                     "unable to spawn contract `Test_mapreduce_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 726544481870995 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string
                     "unable to spawn contract `Test_mapreduce_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 535946186186945 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string
                     "unable to spawn contract `Test_mapreduce_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 780000109830142 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string
                     "unable to spawn contract `Test_mapreduce_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 599057132130631 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
