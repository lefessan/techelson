{
  # deploying contract `Test_map_fold_closure`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test_map_fold_closure`
      {
        EMPTY_MAP string bool ;
        NONE bool ;
        PUSH string "zG" ;
        UPDATE ;
        PUSH bool True ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        NONE bool ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool True ;
        PAIR
      } ;
      # money transferred
      PUSH mutez 539438792508025 ;
      # delegatable
      PUSH bool False ;
      # spendable
      PUSH bool True ;
      # delegate
      {
        PUSH key "" ;
        HASH_KEY ;
        SOME
      } ;
      # manager
      {
        PUSH key "1f2ea6fbb2cbc8bcfd" ;
        BLAKE2B
      }
    } ;
    CREATE_CONTRACT "Test_map_fold_closure"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_fold_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 581158018867695 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_fold_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 486269977689537 ;
    {
      EMPTY_MAP string mutez ;
      PUSH mutez 780000109830142 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 344709211196139 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 88238137825458 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "J*^3)" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "H2" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "Pw{jP[0(_9[" ;
      UPDATE ;
      PUSH mutez 777558254060656 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 206086407581280 ;
      SOME ;
      PUSH string "Z" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 812523915759621 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 543121121735633 ;
      SOME ;
      PUSH string "xWT~[_pT2" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "oSoVX,)N<X`p.(pTp '" ;
      UPDATE ;
      PUSH mutez 755660189882363 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 507575147934146 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 357931738305099 ;
      SOME ;
      PUSH string "" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE ;
      PUSH mutez 664731669399716 ;
      SOME ;
      PUSH string "*+1!%Ra+,S<v" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "" ;
      UPDATE
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
