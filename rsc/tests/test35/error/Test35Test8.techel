{
  # deploying contract `Test35`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test35`
      {
        PUSH int 42 ;
        NEG
      } ;
      # money transferred
      PUSH mutez 566001319868750 ;
      # delegatable
      PUSH bool True ;
      # spendable
      PUSH bool False ;
      # delegate
      {
        PUSH key "f1c5bdabf" ;
        BLAKE2B ;
        SOME
      } ;
      # manager
      {
        PUSH key "" ;
        SHA256
      }
    } ;
    CREATE_CONTRACT "Test35"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 221157206051697 ;
    {
      PUSH unit Unit ;
      RIGHT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 581158018867695 ;
    {
      PUSH unit Unit ;
      LEFT (or (unit %B) (unit %C)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 486269977689537 ;
    {
      PUSH unit Unit ;
      LEFT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 353671907995110 ;
    {
      PUSH unit Unit ;
      LEFT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 85862909469676 ;
    {
      PUSH unit Unit ;
      LEFT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 195084862059430 ;
    {
      PUSH unit Unit ;
      LEFT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 629043893146105 ;
    {
      PUSH unit Unit ;
      LEFT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 512313097330030 ;
    {
      PUSH unit Unit ;
      LEFT (or (unit %B) (unit %C)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 607138695520541 ;
    {
      PUSH unit Unit ;
      LEFT (or (unit %B) (unit %C)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 664731669399716 ;
    {
      PUSH unit Unit ;
      LEFT (or (unit %B) (unit %C)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 629264608368742 ;
    {
      PUSH unit Unit ;
      RIGHT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 357931738305099 ;
    {
      PUSH unit Unit ;
      LEFT unit ;
      RIGHT unit ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 507575147934146 ;
    {
      PUSH unit Unit ;
      LEFT (or (unit %B) (unit %C)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (unit %A) (or (unit %B) (unit %C))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test35`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 285511883318426 ;
    {
      PUSH unit Unit ;
      LEFT (or (unit %B) (unit %C)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
