{
  # deploying contract `Test_map_fold_closure`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test_map_fold_closure`
      {
        EMPTY_MAP string bool ;
        PUSH bool False ;
        SOME ;
        PUSH string "t" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string ")-" ;
        UPDATE ;
        NONE bool ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool True ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        NONE bool ;
        PUSH string "921Pv+X-rz/$h:1W5arZ_)A5gS{C(9R$(nuU" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string ":" ;
        UPDATE ;
        PUSH bool True ;
        SOME ;
        PUSH string "|wdE/X{[y^" ;
        UPDATE ;
        PUSH bool True ;
        SOME ;
        PUSH string "*U." ;
        UPDATE ;
        NONE bool ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool True ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        NONE bool ;
        PUSH string "" ;
        UPDATE ;
        NONE bool ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool False ;
        SOME ;
        PUSH string "" ;
        UPDATE ;
        PUSH bool False ;
        PAIR
      } ;
      # money transferred
      PUSH mutez 37836525478766 ;
      # delegatable
      PUSH bool False ;
      # spendable
      PUSH bool False ;
      # delegate
      NONE key_hash ;
      # manager
      {
        PUSH key "cecf" ;
        HASH_KEY
      }
    } ;
    CREATE_CONTRACT "Test_map_fold_closure"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_fold_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 380044874379204 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_fold_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 365199537045269 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_fold_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 535257729271832 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_fold_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 439561114117302 ;
    EMPTY_MAP string mutez ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (map string mutez) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_fold_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 600795888205581 ;
    {
      EMPTY_MAP string mutez ;
      PUSH mutez 576505955658814 ;
      SOME ;
      PUSH string "!)" ;
      UPDATE ;
      NONE mutez ;
      PUSH string "6IUCoXzJHci^x!_" ;
      UPDATE
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
