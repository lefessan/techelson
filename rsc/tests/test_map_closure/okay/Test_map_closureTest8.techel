{
  # deploying contract `Test_map_closure`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test_map_closure`
      NIL int ;
      # money transferred
      PUSH mutez 567306450638140 ;
      # delegatable
      PUSH bool False ;
      # spendable
      PUSH bool True ;
      # delegate
      {
        PUSH key "e34336c6efaffbf98b" ;
        SHA256 ;
        SOME
      } ;
      # manager
      {
        PUSH key "" ;
        BLAKE2B
      }
    } ;
    CREATE_CONTRACT "Test_map_closure"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 434147464775061 ;
    PUSH int 337 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 220432504936320 ;
    {
      PUSH int 164720 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 735587315708260 ;
    {
      PUSH int 4225731623167531856720116547 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 38476357450233 ;
    {
      PUSH int 804218646678424832431127 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 127799207997947 ;
    {
      PUSH int 567 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 809456555404168 ;
    {
      PUSH int 6255 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 62533131651608 ;
    PUSH int 30274 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 111230498175141 ;
    {
      PUSH int 1513536255 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 170793564929942 ;
    PUSH int 813778885862314754864765320182 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 371233863502297 ;
    PUSH int 0 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 148250797875661 ;
    {
      PUSH int 158385480641617615632440846206136852746 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 385064585006229 ;
    PUSH int 23272867068055082557 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 795609106145035 ;
    {
      PUSH int 605723134 ;
      NEG
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT int ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test_map_closure`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 652651605405978 ;
    PUSH int 482480274071 ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
