parameter int;
storage int;
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       PUSH @inc0 int 1 ;
       PUSH @inc1 int 1 ;
       DUP @inc1 ;
       DUUUP @inc0 ;
       ADD @inc ;
       PUSH int 10 ;
       DUUUP @inc1 ;
       DUUUUUP @inc0 ;
       DUUUUP @inc ;
       ADD ;
       ADD ;
       COMPARE ;
       GT ;
       IF { UNIT ; FAILWITH } { UNIT } ;
       DROP ;
       PUSH int 0 ;
       DUUUUUP @parameter ;
       LEFT int ;
       LOOP_LEFT
         { RENAME @_acc_rien_slash_6 ;
           DIP { DUP } ;
           PAIR ;
           DUP ;
           CAR @acc ;
           PUSH int 1 ;
           DUUUP ;
           CDR @rien ;
           ADD @rien ;
           PUSH int 10 ;
           DUUUP @acc ;
           COMPARE ;
           GT ;
           IF { DUP @rien ; DUUUP @acc ; RIGHT int ; PAIR }
              { DUP @rien ; DUUUUUUP @inc ; DUUUUP @acc ; ADD ; LEFT int ; PAIR } ;
           DIP { DROP } ;
           DIP { DROP } ;
           DIP { DROP ; DROP } ;
           DUP ;
           DIP { CDR } ;
           CAR } ;
       PAIR @_storage_rien ;
       PUSH int 0 ;
       DUUP ;
       CDR @rien ;
       COMPARE ;
       EQ ;
       IF { UNIT ; FAILWITH } { UNIT } ;
       DROP ;
       DUP ;
       CAR @storage ;
       LEFT int ;
       LOOP_LEFT @storage
         { RENAME @acc_slash_13 ;
           PUSH int 10 ;
           DUUP @acc ;
           COMPARE ;
           GT ;
           IF { DUP @acc ; RIGHT int }
              { DUUUP @inc ; DUUP @acc ; ADD ; LEFT int } ;
           DIP { DROP } } ;
       DIP { DROP ; DROP ; DROP ; DROP ; DROP ; DROP } ;
       NIL operation ;
       PAIR };
