{
  # deploying contract `Test37`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test37`
      {
        # creating contract creation parameters
        {
          PUSH unit Unit ;
          # money transferred
          PUSH mutez 581839447080812 ;
          # delegatable
          PUSH bool True ;
          # spendable
          PUSH bool False ;
          # delegate
          NONE key_hash ;
          # manager
          {
            PUSH key "" ;
            HASH_KEY
          }
        } ;
        CREATE_CONTRACT {
            storage unit;
            parameter unit;
            code {
                   # discarding inputs
                   DROP ;
                   PUSH unit Unit ;
                   NIL operation ;
                   PAIR
                 };
        } ;
        # create a list of operations and apply
        {
          NIL operation ;
          SWAP ;
          CONS ;
          APPLY_OPERATIONS
        } ;
        # retrieve contract from address, fail if none
        {
          CONTRACT unit ;
          IF_NONE {
                    PUSH string
                         "unable to spawn contract `test-generated anonymous contract`" ;
                    FAILWITH
                  }
                  {}
        } ;
        EMPTY_MAP int mutez ;
        PUSH mutez 181942050479515 ;
        SOME ;
        PUSH int 402078 ;
        UPDATE ;
        NONE mutez ;
        PUSH int 8757550 ;
        UPDATE ;
        PUSH mutez 383718098490188 ;
        SOME ;
        PUSH int 0 ;
        UPDATE ;
        NONE mutez ;
        PUSH int 35 ;
        UPDATE ;
        PUSH mutez 73175511781087 ;
        SOME ;
        {
          PUSH int 663810784 ;
          NEG
        } ;
        UPDATE ;
        PUSH mutez 281095716186857 ;
        SOME ;
        {
          PUSH int 4764548820576 ;
          NEG
        } ;
        UPDATE ;
        NONE mutez ;
        PUSH int 218017728845017641117771831716345577 ;
        UPDATE ;
        PUSH mutez 691166992846084 ;
        SOME ;
        PUSH int 0 ;
        UPDATE ;
        NONE mutez ;
        {
          PUSH int 631 ;
          NEG
        } ;
        UPDATE ;
        NONE mutez ;
        {
          PUSH int 15 ;
          NEG
        } ;
        UPDATE ;
        NONE mutez ;
        {
          PUSH int 20331147871570834066448680 ;
          NEG
        } ;
        UPDATE ;
        NONE mutez ;
        PUSH int 0 ;
        UPDATE ;
        PUSH mutez 310853211434312 ;
        SOME ;
        PUSH int 75 ;
        UPDATE ;
        PUSH mutez 624777214168447 ;
        SOME ;
        PUSH int 3277742756 ;
        UPDATE ;
        PAIR
      } ;
      # money transferred
      PUSH mutez 814484774912710 ;
      # delegatable
      PUSH bool False ;
      # spendable
      PUSH bool False ;
      # delegate
      NONE key_hash ;
      # manager
      {
        PUSH key "451c5" ;
        BLAKE2B
      }
    } ;
    CREATE_CONTRACT "Test37"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (contract :UnitContract unit) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test37`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 297707783877879 ;
    {
      # creating contract creation parameters
      {
        PUSH unit Unit ;
        # money transferred
        PUSH mutez 342237994170478 ;
        # delegatable
        PUSH bool False ;
        # spendable
        PUSH bool False ;
        # delegate
        NONE key_hash ;
        # manager
        {
          PUSH key "bf965df2f64da253e" ;
          SHA256
        }
      } ;
      CREATE_CONTRACT {
          storage unit;
          parameter unit;
          code {
                 # discarding inputs
                 DROP ;
                 PUSH unit Unit ;
                 NIL operation ;
                 PAIR
               };
      } ;
      # create a list of operations and apply
      {
        NIL operation ;
        SWAP ;
        CONS ;
        APPLY_OPERATIONS
      } ;
      # retrieve contract from address, fail if none
      {
        CONTRACT unit ;
        IF_NONE {
                  PUSH string
                       "unable to spawn contract `test-generated anonymous contract`" ;
                  FAILWITH
                }
                {}
      }
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
