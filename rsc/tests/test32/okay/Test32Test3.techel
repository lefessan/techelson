{
  # deploying contract `Test32`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test32`
      PUSH int 523056 ;
      # money transferred
      PUSH mutez 629043893146105 ;
      # delegatable
      PUSH bool True ;
      # spendable
      PUSH bool False ;
      # delegate
      {
        PUSH key "a3bcb07" ;
        SHA256 ;
        SOME
      } ;
      # manager
      {
        PUSH key "" ;
        HASH_KEY
      }
    } ;
    CREATE_CONTRACT "Test32"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 755660189882363 ;
    {
      PUSH nat 32 ;
      PUSH unit Unit ;
      PUSH bool True ;
      PAIR ;
      PAIR ;
      {
        PUSH int 845713845626815 ;
        NEG
      } ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 201154556085830 ;
    {
      PUSH int 78632418551 ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 550187317983042 ;
    {
      PUSH int 0 ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 461843249899862 ;
    {
      PUSH nat 35 ;
      PUSH unit Unit ;
      PUSH bool True ;
      PAIR ;
      PAIR ;
      PUSH int 2847760001 ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 385866045936593 ;
    {
      PUSH nat 485247585732470 ;
      PUSH unit Unit ;
      PUSH bool False ;
      PAIR ;
      PAIR ;
      PUSH int 68 ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 780000109830142 ;
    {
      PUSH nat 4 ;
      PUSH unit Unit ;
      PUSH bool False ;
      PAIR ;
      PAIR ;
      {
        PUSH int 7508153281756274064 ;
        NEG
      } ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
