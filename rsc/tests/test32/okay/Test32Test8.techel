{
  # deploying contract `Test32`
  {
    # creating contract creation parameters
    {
      # creating storage for contract `Test32`
      PUSH int 57253 ;
      # money transferred
      PUSH mutez 30244347759661 ;
      # delegatable
      PUSH bool True ;
      # spendable
      PUSH bool False ;
      # delegate
      {
        PUSH key "6a0b9" ;
        BLAKE2B ;
        SOME
      } ;
      # manager
      {
        PUSH key "f06adfecc3bd0cc0bcb38ff1bd647f49a" ;
        HASH_KEY
      }
    } ;
    CREATE_CONTRACT "Test32"
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 149867724607750 ;
    {
      PUSH nat 8267 ;
      PUSH unit Unit ;
      PUSH bool True ;
      PAIR ;
      PAIR ;
      {
        PUSH int 3 ;
        NEG
      } ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 804109050697463 ;
    {
      {
        PUSH int 11 ;
        NEG
      } ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 62533131651608 ;
    {
      PUSH int 74 ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 166039951860191 ;
    {
      PUSH int 0 ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 111230498175141 ;
    {
      {
        PUSH int 8778174513536255 ;
        NEG
      } ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 723653168528609 ;
    {
      PUSH nat 175285686 ;
      PUSH unit Unit ;
      PUSH bool False ;
      PAIR ;
      PAIR ;
      PUSH int 273720 ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 33170849434051 ;
    {
      PUSH nat 4385480641617615632440846206136852746 ;
      PUSH unit Unit ;
      PUSH bool True ;
      PAIR ;
      PAIR ;
      {
        PUSH int 43571467 ;
        NEG
      } ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 718172793756395 ;
    {
      PUSH nat 7727546 ;
      PUSH unit Unit ;
      PUSH bool True ;
      PAIR ;
      PAIR ;
      PUSH int 86 ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 89656379879356 ;
    {
      PUSH int 24387447 ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 795609106145035 ;
    {
      PUSH nat 0 ;
      PUSH unit Unit ;
      PUSH bool False ;
      PAIR ;
      PAIR ;
      {
        PUSH int 8723134 ;
        NEG
      } ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 253757826780544 ;
    {
      PUSH nat 4480274071 ;
      PUSH unit Unit ;
      PUSH bool False ;
      PAIR ;
      PAIR ;
      PUSH int 0 ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 866636338416126 ;
    {
      PUSH nat 343564673754 ;
      PUSH unit Unit ;
      PUSH bool False ;
      PAIR ;
      PAIR ;
      PUSH int 585847 ;
      PAIR ;
      RIGHT int ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 103998164291350 ;
    {
      {
        PUSH int 1140785734464446706833671 ;
        NEG
      } ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  } ;
  # create transfer operation
  {
    DUP ;
    # retrieve contract from address, fail if none
    {
      CONTRACT (or :t (int %A) (pair %B int (pair (pair bool unit) nat))) ;
      IF_NONE {
                PUSH string "unable to spawn contract `Test32`" ;
                FAILWITH
              }
              {}
    } ;
    PUSH mutez 857112441047659 ;
    {
      PUSH int 0 ;
      LEFT (pair int (pair (pair bool unit) nat)) ;
      RENAME :t
    } ;
    TRANSFER_TOKENS
  } ;
  # create a list of operations and apply
  {
    NIL operation ;
    SWAP ;
    CONS ;
    APPLY_OPERATIONS
  }
}
