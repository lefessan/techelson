parameter string;
storage (pair :storage (big_map string int) (option int));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUUP @storage ;
       CDR %r ;
       DUUUP @storage ;
       CAR %bm ;
       DUUUP @parameter ;
       GET ;
       IF_NONE
         { DUUUP @storage ;
           CAR %bm ;
           PUSH int 0 ;
           DUUUUP @parameter ;
           DIP { SOME } ;
           UPDATE }
         { PUSH int 0 ;
           DUUP @x ;
           COMPARE ;
           LT ;
           IF { DUUUUP @storage ;
                CAR %bm ;
                DUUUUP @parameter ;
                DIP { NONE int } ;
                UPDATE }
              { PUSH int 10 ;
                DUUP @x ;
                COMPARE ;
                LT ;
                IF { DUUUUP @storage ;
                     CAR %bm ;
                     PUSH int 1 ;
                     DUUUP @x ;
                     ADD ;
                     DUUUUUP @parameter ;
                     DIP { SOME } ;
                     UPDATE }
                   { PUSH int 100 ;
                     DUUP @x ;
                     COMPARE ;
                     GT ;
                     IF { DUUUUP @storage ;
                          CAR %bm ;
                          PUSH int -1 ;
                          DUUUUUP @parameter ;
                          DIP { SOME } ;
                          UPDATE }
                        { DUUUUP @storage ;
                          CAR %bm ;
                          DUUP @x ;
                          PUSH int 2 ;
                          MUL ;
                          DUUUUUP @parameter ;
                          DIP { SOME } ;
                          UPDATE } } } ;
           DIP { DROP } } ;
       DIIIP { DROP } ;
       PAIR @storage %bm %r ;
       DUP ;
       CAR %bm ;
       SWAP ;
       CAR %bm ;
       DUUUP ;
       DIIIP { DROP } ;
       GET @r ;
       SWAP ;
       PAIR @storage %bm %r ;
       NIL operation ;
       PAIR };
